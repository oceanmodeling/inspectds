---
name: "Run Tests"

on:
  - "push"
  - "pull_request"

jobs:
  run_tests:
    name: "conda + pip test"
    strategy:
      fail-fast: true
      matrix:
        os:
          - "ubuntu"
          - "macos"
        python-version:
          - "3.9"
    runs-on: "${{ matrix.os }}-latest"
    defaults:
      run:
        shell: "bash -l {0}"
    steps:

      - name: "Checkout repo"
        uses: "actions/checkout@v2"

      - name: "Cache conda pkgs"
        uses: "actions/cache@v2"
        env:
          # Increase this value to reset cache if etc/example-environment.yml has not changed
          CACHE_NUMBER: 0
          LOCK_FILE: "ci/conda-${{ runner.os }}-64.lock"
        with:
          path: "~/conda_pkgs_dir"
          key: "conda_pkgs-${{ env.CACHE_NUMBER }}-${{ hashFiles( env.LOCK_FILE ) }}"

      - name: "Setup conda"
        uses: "conda-incubator/setup-miniconda@v2"
        with:
          activate-environment: "inspectds_ci"
          auto-update-conda: true
          use-only-tar-bz2: true # IMPORTANT: This needs to be set for caching to work properly!
          channel-priority: "strict"
          environment-file: "ci/conda-${{ runner.os }}-64.lock"

      - name: "Debug pip"
        run: |
          which python
          which pip
          pip --version
          pip cache dir

      - name: "Get pip cache dir"
        id: "pip-cache"
        run: |
          echo "::set-output name=dir::$(pip cache dir)"

      - name: "Cache pip"
        uses: "actions/cache@v2"
        env:
          # Increase this value to reset cache if files in tests/data have been added/removed
          CACHE_NUMBER: 0
        with:
          path: "${{ steps.pip-cache.outputs.dir }}"
          key: "${{ runner.os }}-pip-${{ env.CACHE_NUMBER }}-${{ hashFiles('ci/requirements-dev.txt') }}"

      - name: "Install dependencies"
        run: "pip install -r ci/requirements-dev.txt"

      - name: "Test installation"
        run: |
          python -m cfgrib selfcheck
          python -m pytest --version

      - name: "Run tests"
        run: "python -mpytest tests --verbose --showlocals"
