---
name: "Tests"

on:
  push:
    branches:
      - main
      - master
    paths:
      - "**.py"
      - ".github/workflows/test*.yml"
      - "pyproject.toml"
      - "poetry.lock"
      - "conda-lock.yml"
      - "requirements/*"
  pull_request:
    paths:
      - "**.py"
      - ".github/workflows/test*.yml"
      - "pyproject.toml"
      - "poetry.lock"
      - "conda-lock.yml"
      - "requirements/*"

jobs:
  run_tests:
    name: "test ${{ matrix.python-version }} on ${{ matrix.os }}"
    strategy:
      fail-fast: true
      matrix:
        os:
          - "ubuntu"
          - "macos"
        python-version:
          - "3.9"
          - "3.10"
          - "3.11"
    runs-on: "${{ matrix.os }}-latest"
    defaults:
      run:
        shell: "bash -el {0}"
    steps:
      - uses: "actions/checkout@main"

      # Setup conda + cache
      - name: "Cache conda pkgs"
        uses: "actions/cache@main"
        env:
          # Increase this value to reset cache if etc/example-environment.yml has not changed
          CACHE_NUMBER: 0
          LOCK_FILE: "ci/conda-lock-${{ runner.os }}-64-py${{ matrix.python-version }}"
        with:
          path: "~/conda_pkgs_dir"
          key: "conda-${{ runner.os }}-${{ hashFiles( env.LOCK_FILE ) }}-${{ env.CACHE_NUMBER }}"
      - name: "Setup conda"
        uses: "conda-incubator/setup-miniconda@v2"
        with:
          activate-environment: "inspectds_ci"
          # python-version: ${{ matrix.python-version }}
          # mamba-version: "*"
          channels: "conda-forge"
          auto-update-conda: true
          use-only-tar-bz2: true # IMPORTANT: This needs to be set for caching to work properly!
          channel-priority: "strict"
          environment-file: "ci/conda-lock-${{ runner.os }}-64-py${{ matrix.python-version }}"

      - run: printenv | sort
      - run: |
          conda info
          mamba info
          conda list
          conda config --show-sources
          conda config --show
      - run: |
          which python
          python --version
          python -m pip --version
          python -m pip cache info

      - run: "python -mpip install -r requirements/requirements-dev.txt"
      - run: python -m cfgrib selfcheck
      - run: mypy --version
      - run: mypy inspectds
      - run: make test
